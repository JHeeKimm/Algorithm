# 1. 입력
#   - 첫째 줄: 바닥의 세로 크기 N, 가로 크기 M이 공백으로 구분되어 주어짐
#   - 둘째 줄 ~ N개의 줄: 바닥 장식 모양을 나타내는 '-‘와 ’|‘로만 이루어진 M개의 문자 
#       - 나무 판자는 크기 1의 너비를 가짐

# 2. 출력
#   - 방 바닥을 장식하는데 필요한 나무 판자의 개수

# 3. 문제 해결
#   - 두 개의 ‘-’가 인접해 있고, 같은 행에 있다면, 두 개는 같은 나무 판자이다. 
#   -> 좌우 확인하고 인접해 있다면 하나의 나무 판자로 본다.
#   - 두 개의 ‘|’가 인접해 있고, 같은 열에 있다면, 두 개는 같은 나무 판자이다.
#   -> 상하 확인하고 인접해 있다면 하나의 나무 판자로 본다.

#   -> 2차원 배열로 입력 받아서 순회하며 확인하고 카운트한다.
#   -> 첫 요소면 카운트, 좌측이나 윗쪽으로 이전 요소가 같은 값이 아닌 경우 카운트

import sys
input = sys.stdin.readline

n, m = map(int, input().split()) # 행, 열 크기 입력 받기
floor = [list(input().strip()) for _ in range(n)] # 2차원 배열로 입력 받기

count = 0

# 2차원 배열 순회하며 인접한 나무 판자 확인 후 카운트
for x in range(n):
    for y in range(m):
        if floor[x][y] == '-':
            if y==0 or floor[x][y-1] != '-': # 한 행의 첫 요소가 '-'이거나 좌측 이전 요소가 '-'이 아닌 경우 카운트 증가
                count += 1
        elif floor[x][y] == '|': 
            if x==0 or floor[x-1][y] != '|': # 한 열의 첫 요소가 '|'이거나 상측 이전 요소가 '|'이 아닌 경우 카운트 증가
                count += 1

print(count)